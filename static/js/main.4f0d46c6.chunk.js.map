{"version":3,"sources":["js/helpers/Globals.js","js/functions/PlayIcon.js","js/functions/ShuffleArray.js","js/functions/TetradicColourCalulator.js","audio/hexagons-no-2.ogg","audio/hexagons-no-2.mid","js/P5SketchWithAudio.js","js/App.js","index.js"],"names":["window","p5","PlayIcon","id","className","xmlns","height","viewBox","width","d","fill","ShuffleArray","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","TetradicColourCalulator","hue","saturation","brightness","set","i","colour","h","s","b","push","P5SketchWithAudio","sketchRef","useRef","Sketch","p","canvas","canvasWidth","innerWidth","canvasHeight","innerHeight","audioLoaded","player","PPQ","baseSize","baseDivisors","baseDivisor","colourPalette","baseRepititions","baseRepitition","loadMidi","Midi","fromUrl","midi","then","result","console","log","noteSet1","tracks","notes","noteSet2","noteSet3","filter","note","controlChanges","Object","assign","scheduleCueSet","keys","document","getElementById","classList","add","remove","preload","song","loadSound","audio","onended","logCredits","setup","noLoop","colorMode","HSB","createCanvas","reset","draw","isPlaying","noteSet","callbackName","poly","lastTicks","currentCue","ticks","time","addCue","executeCueSet1","changeBaseSize","hexasToDraw","hexagonGrid","slice","ceil","background","globalOpacity","noStroke","hexagon","bigHexSize","forEach","x","y","size","j","duration","delay","parseInt","setTimeout","noFill","strokeWeight","stroke","executeCueSet2","index","indexOf","repititions","splice","bigHexStep","executeCueSet3","semiQuaver","map","colourIndex","executeCueSet4","controlChange","value","radius","start","TWO_PI","angleMode","RADIANS","angle","beginShape","a","sx","cos","sy","sin","vertex","endShape","CLOSE","mousePressed","pause","currentTime","buffer","addClass","play","creditsLogged","stop","randomHue","concat","divisors","populateHexagonGrid","count","columns","rows","xAdjuster","updateCanvasDimensions","resizeCanvas","attachEvent","addEventListener","useEffect","current","ref","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4f0d46c6.chunk.js","sourcesContent":["// p5.sound doesn't work correctly when p5 is not available in the global name space so we add it here\n// https://github.com/processing/p5.js-sound/issues/512\nimport * as p5 from \"p5\";\nwindow.p5 = p5;\n","export default function PlayIcon() {\n    return (\n        <svg id=\"play-icon\" className='fade-out' xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n        </svg>\n    )\n}\n","function ShuffleArray(array) {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nexport default ShuffleArray;\n","function TetradicColourCalulator(hue, saturation = 100, brightness = 100) {\n    let set = [];\n    let i = 0;\n    while(i < 4){\n        hue = hue + i * 90;\n        hue = hue < 360 ? hue : hue - 360;\n        let colour = {\n          h: hue,\n          s: saturation,\n          b: brightness,\n        };\n        i++;\n        set.push(colour);\n    }\n\n\n  return set;\n}\n\nexport default TetradicColourCalulator;","export default __webpack_public_path__ + \"static/media/hexagons-no-2.a28c7879.ogg\";","export default __webpack_public_path__ + \"static/media/hexagons-no-2.6cb01f6d.mid\";","import React, { useRef, useEffect } from \"react\";\nimport \"./helpers/Globals\";\nimport \"p5/lib/addons/p5.sound\";\nimport * as p5 from \"p5\";\nimport { Midi } from '@tonejs/midi'\nimport PlayIcon from './functions/PlayIcon.js';\nimport ShuffleArray from './functions/ShuffleArray.js';\nimport TetradicColourCalulator from './functions/TetradicColourCalulator.js';\n\nimport audio from \"../audio/hexagons-no-2.ogg\";\nimport midi from \"../audio/hexagons-no-2.mid\";\n\nconst P5SketchWithAudio = () => {\n    const sketchRef = useRef();\n\n    const Sketch = p => {\n\n        p.canvas = null;\n\n        p.canvasWidth = window.innerWidth;\n\n        p.canvasHeight = window.innerHeight;\n\n        p.audioLoaded = false;\n\n        p.player = null;\n\n        p.PPQ = 3840 * 4;\n\n        p.baseSize = 0;\n\n        p.baseDivisors = [2, 4, 8, 16];\n\n        p.baseDivisor = 16;\n\n        p.colourPalette = [];\n\n        p.baseRepititions = [12, 18, 24];\n\n        p.baseRepitition = 1;\n\n        p.loadMidi = () => {\n            Midi.fromUrl(midi).then(\n                function(result) {\n                    console.log(result);\n                    const noteSet1 = result.tracks[5].notes; // Sampler 3 - QS Pure\n                    const noteSet2 = result.tracks[3].notes; // Sampler 2 - QS Para\n                    //const noteSet3 = result.tracks[6].notes; // Sampler 4 - Dance Saw\n                    const noteSet3 = result.tracks[1].notes.filter(note => note.midi != 43); // Redrum 1\n                    let controlChanges = Object.assign({},result.tracks[7].controlChanges); // Filter 1 - Dance Saw\n                    p.scheduleCueSet(noteSet1, 'executeCueSet1');\n                    p.scheduleCueSet(noteSet2, 'executeCueSet2');\n                    p.scheduleCueSet(noteSet3, 'executeCueSet3');\n                    p.scheduleCueSet(controlChanges[Object.keys(controlChanges)[0]], 'executeCueSet4');\n                    p.audioLoaded = true;\n                    document.getElementById(\"loader\").classList.add(\"loading--complete\");\n                    document.getElementById(\"play-icon\").classList.remove(\"fade-out\");\n                }\n            );\n            \n        }\n\n        p.preload = () => {\n            p.song = p.loadSound(audio, p.loadMidi);\n            p.song.onended(p.logCredits);\n        }\n\n        p.setup = () => {\n            p.noLoop();\n            p.colorMode(p.HSB);\n            p.canvas = p.createCanvas(p.canvasWidth, p.canvasHeight);\n            p.reset();\n        }\n\n        p.draw = () => {\n            if(p.audioLoaded && p.song.isPlaying()){\n               \n            }\n        }\n\n        p.scheduleCueSet = (noteSet, callbackName, poly = false)  => {\n            let lastTicks = -1,\n                currentCue = 1;\n            for (let i = 0; i < noteSet.length; i++) {\n                const note = noteSet[i],\n                    { ticks, time } = note;\n                if(ticks !== lastTicks || poly){\n                    note.currentCue = currentCue;\n                    p.song.addCue(time, p[callbackName], note);\n                    lastTicks = ticks;\n                    currentCue++;\n                }\n            }\n        } \n\n        p.executeCueSet1 = (note) => {\n            p.changeBaseSize();\n            if(p.baseRepitition > 1) {\n                let hexasToDraw = [];\n                p.hexagonGrid = p.hexagonGrid.slice(0, Math.ceil(p.hexagonGrid.length / 4));\n                p.background(0, 0, 0, p.globalOpacity * 0.4);\n                p.fill(0,0,0, p.globalOpacity);\n                p.noStroke();\n                console.log(p.globalOpacity);\n                p.hexagon(p.width / 2, p.height / 2, p.bigHexSize, 0);\n                p.hexagonGrid.forEach(hexagon => {\n                    const { colour, x, y } = hexagon;\n                    let size = p.baseSize;\n                    for (let i = 0; i < p.baseRepitition; i++) {\n                        for (let j = 0; j < i; j++) {\n                            size = size - size / 10;\n                        }\n                        hexasToDraw.push(\n                            {\n                                x: x,\n                                y: y,\n                                colour: colour,\n                                size: size,\n                            }\n                        );\n                    }\n                });\n                hexasToDraw = ShuffleArray(hexasToDraw);\n                hexasToDraw = hexasToDraw.slice(0, Math.ceil(hexasToDraw.length / 2));\n                const { duration } = note,\n                    delay = parseInt(duration * 1000) / hexasToDraw.length;\n                for (let i = 0; i < hexasToDraw.length; i++) {\n                    const hexagon = hexasToDraw[i], \n                        { x, y, size, colour } = hexagon;\n                    setTimeout(\n                        function () {\n                            p.noFill();\n                            p.strokeWeight(1);\n                            p.stroke(colour.h, colour.s, colour.b, p.globalOpacity * 1.8);\n                            p.hexagon(hexagon.x, hexagon.y, size);\n                        },\n                        (delay * i)\n                    );\n                }\n            }\n            else {\n                p.background(0, 0, 0, p.globalOpacity * 0.9);\n                p.hexagonGrid.forEach(hexagon => {\n                    const { colour } = hexagon;\n                    p.fill(colour.h, colour.s, colour.b, p.globalOpacity);\n                    p.stroke(colour.h, colour.s, colour.b, 0.5);\n                    p.hexagon(hexagon.x, hexagon.y, p.baseSize);\n                });\n            }\n            \n        }\n\n        p.executeCueSet2 = (note) => {\n            const index = p.baseRepititions.indexOf(p.baseRepitition)\n            let repititions = [...p.baseRepititions];\n            repititions.splice(index, 1);\n            p.baseRepitition = p.random(repititions);\n        }\n\n        p.bigHexSize = 0;\n\n        p.bigHexStep = 0;\n\n        p.globalOpacity = 0;\n\n        p.executeCueSet3 = (note) => {\n            const { ticks } = note,\n               semiQuaver = p.map(ticks % 122880, 0, 122880, 0, 32),\n               colourIndex = Math.floor(p.map(ticks % 122880, 0, 122880, 0, 16) % 8),\n               colour = p.colourPalette[colourIndex],\n               size =  p.bigHexSize + p.bigHexStep * semiQuaver;\n            p.noFill();\n            p.strokeWeight(6);\n            p.stroke(colour.h, colour.s, colour.b, p.globalOpacity);\n            p.hexagon(p.width / 2, p.height / 2, size, 0);\n        }\n\n        p.executeCueSet4 = (controlChange) => {\n            p.globalOpacity = controlChange.value;\n        }\n\n        /*\n        * function to draw a hexagon shape\n        * adapted from: https://p5js.org/examples/form-regular-polygon.html\n        * @param {Number} x        - x-coordinate of the hexagon\n        * @param {Number} y      - y-coordinate of the hexagon\n        * @param {Number} radius   - radius of the hexagon\n        */\n        p.hexagon = (x, y, radius, start = p.TWO_PI / 12) => {\n            radius = radius / 2;\n            p.angleMode(p.RADIANS);\n            const angle = p.TWO_PI / 6;\n            p.beginShape();\n            for (var a = start; a < p.TWO_PI + start; a += angle) {\n                let sx = x + p.cos(a) * radius;\n                let sy = y + p.sin(a) * radius;\n                p.vertex(sx, sy);\n            }\n            p.endShape(p.CLOSE);\n        }\n\n        p.mousePressed = () => {\n            if(p.audioLoaded){\n                if (p.song.isPlaying()) {\n                    p.song.pause();\n                } else {\n                    if (parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)) {\n                        p.reset();\n                    }\n                    document.getElementById(\"play-icon\").classList.add(\"fade-out\");\n                    p.canvas.addClass(\"fade-in\");\n                    p.song.play();\n                }\n            }\n        }\n\n        p.creditsLogged = false;\n\n        p.logCredits = () => {\n            if (\n                !p.creditsLogged &&\n                parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)\n            ) {\n                p.creditsLogged = true;\n                    console.log(\n                    \"Music By: http://labcat.nz/\",\n                    \"\\n\",\n                    \"Animation By: https://github.com/LABCAT/hexagons-no-2/\"\n                );\n                p.song.stop();\n            }\n        };\n\n        p.reset = () => {\n            p.background(0,0,100);\n            const randomHue = p.random(360);\n            p.colourPalette = TetradicColourCalulator(randomHue,p.random(50, 100),p.random(50, 100));\n            p.colourPalette = p.colourPalette.concat(\n                TetradicColourCalulator(randomHue + 30,p.random(50, 100),p.random(50, 100))\n            );\n            p.baseDivisors = [2, 4, 8, 16];\n            p.baseDivisor = 64;\n            p.baseRepitition = 1;\n            p.bigHexSize = p.height >= p.width ? p.width : p.height;\n            p.bigHexSize = p.bigHexSize * 1.15;\n            p.bigHexStep = (p.width - p.bigHexSize) / 32; \n            p.changeBaseSize();\n        }\n\n        p.changeBaseSize = () => {\n            if(p.baseRepitition > 1){\n                p.baseDivisors = [ 6, 12, 24, 48 ];\n            }\n            const index = p.baseDivisors.indexOf(p.baseDivisor)\n            let divisors = [...p.baseDivisors];\n            divisors.splice(index, 1);\n            p.baseDivisor = p.random(divisors);\n            p.baseSize = p.height >= p.width ? p.width : p.height;\n            p.baseSize = p.baseSize / p.baseDivisor;\n            p.populateHexagonGrid();\n        }\n\n        p.hexagonGrid = [];\n\n        p.populateHexagonGrid = () => {\n            p.hexagonGrid = [];\n            let count = 0;\n            if(p.baseRepitition > 1){\n                let columns = p.height >= p.width \n                    ? Math.floor(p.width / p.baseSize)\n                    : Math.floor(p.height / p.baseSize),\n                    rows = columns / 2,\n                    xAdjuster = p.width / 2  - (p.baseSize * columns) / 2 + p.baseSize / 2;\n                for (let i = 0; i < rows; i++) {\n                    for (let j = 0; j < columns; j++) {\n                        const colour = p.colourPalette[count % p.colourPalette.length];\n                        p.hexagonGrid.push(\n                            {\n                                x: j * p.baseSize + xAdjuster,\n                                y: p.height / 2 + p.baseSize * i,\n                                colour: colour,\n                            }\n                        );\n                        if(1 > 0){\n                            p.hexagonGrid.push(\n                                {\n                                    x: j * p.baseSize + xAdjuster,\n                                    y: p.height / 2 - p.baseSize * i,\n                                    colour: colour,\n                                }\n                            );\n                        }\n                        count++;\n                    }\n                    columns--;\n                    xAdjuster = xAdjuster + p.baseSize / 2\n                }\n            }\n            else {\n                for (let i = 0; i < Math.floor(p.width / p.baseSize)  + 2; i++) {\n                    for (let j = 0; j < Math.floor(p.height / p.baseSize) + 2; j++) {\n                        const colour = p.colourPalette[count % p.colourPalette.length];\n                        p.hexagonGrid.push(\n                            {\n                                x: j % 2 === 0 ? i * p.baseSize : i * p.baseSize - p.baseSize / 2,\n                                y: j * p.baseSize,\n                                colour: colour,\n                            }\n                        )\n                        count++;\n                    }   \n                }\n            }\n            p.hexagonGrid = ShuffleArray(p.hexagonGrid);\n        }\n\n\n        p.updateCanvasDimensions = () => {\n            p.canvasWidth = window.innerWidth;\n            p.canvasHeight = window.innerHeight;\n            p.canvas = p.resizeCanvas(p.canvasWidth, p.canvasHeight);\n        }\n\n        if (window.attachEvent) {\n            window.attachEvent(\n                'onresize',\n                function () {\n                    p.updateCanvasDimensions();\n                }\n            );\n        }\n        else if (window.addEventListener) {\n            window.addEventListener(\n                'resize',\n                function () {\n                    p.updateCanvasDimensions();\n                },\n                true\n            );\n        }\n        else {\n            //The browser does not support Javascript event binding\n        }\n    };\n\n    useEffect(() => {\n        new p5(Sketch, sketchRef.current);\n    }, []);\n\n    return (\n        <div ref={sketchRef}>\n            <PlayIcon />\n        </div>\n    );\n};\n\nexport default P5SketchWithAudio;\n","import P5SketchWithAudio from './P5SketchWithAudio'\n\nfunction App() {\n  return (\n    <P5SketchWithAudio/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/build.css';\nimport App from './js/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}